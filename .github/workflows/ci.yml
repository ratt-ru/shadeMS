name: Ubuntu CI

on: [push, pull_request]

env:
  POETRY_VERSION: 1.4.0

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Installations
        id: cache-installs
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: install-${{ env.INSTALL_CACHE_HASH }}-2

      - name: Install Poetry
        if: steps.cache-installs.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}

      - name: Test poetry
        run: poetry --version

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install shadems
        run: poetry install --extras "testing"

      - name: Test command
        run: poetry run python bin/shadems --help

      - name: Run testsuite
        run: poetry run py.test -vvv shade_ms/

      - name: Download test dataset
        run: curl https://ratt-public-data.s3.af-south-1.amazonaws.com/test-data/HLTau_B6cont.calavg.tav300s.tar.xz | tar xJf -

      - name: Run end to end test
        run: poetry run python bin/shadems HLTau_B6cont.calavg.tav300s


  # deploy:
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   # Run on a push to a tag or master
  #   if: >
  #     github.event_name == 'push' &&
  #     (startsWith(github.event.ref, 'refs/tags') ||
  #      github.event.ref == 'refs/heads/master')

  #   steps:
  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.8

  #     - name: Install latest setuptools, wheel, pip
  #       run: python3 -m pip install -U pip setuptools wheel

  #     - name: Install dephell
  #       run: curl -L dephell.org/install | python3

  #     - name: Checkout source
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1

  #     - name: Build distributions
  #       run: python setup.py sdist bdist_wheel

  #     - name: Publish distribution ðŸ“¦ to Test PyPI
  #       uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.test_pypi_token }}
  #         repository_url: https://test.pypi.org/legacy/
  #       continue-on-error: true

  #     - name: Publish distribution ðŸ“¦ to PyPI
  #       uses: pypa/gh-action-pypi-publish@master
  #       if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_token }}
